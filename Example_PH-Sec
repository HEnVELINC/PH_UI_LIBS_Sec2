-- Example usage of the Black Ui L1B Made by Rodgie from PH :-)
-- This demonstrates how to create a complete GUI with multiple tabs and components

-- First, load the library (assuming it's in a ModuleScript)
local VenLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/HEnVELINC/PH_UI_LIBS_Sec2/refs/heads/main/Source_HEnVELINC"))()

-- Create the main window
local Window = VenLib:Window("My Game Hub")

-- Create tabs for different categories
local MainTab = Window:Tab("Main")
local SettingsTab = Window:Tab("Settings")
local PlayerTab = Window:Tab("Player")
local MiscTab = Window:Tab("Misc")

-- MAIN TAB - Core functionality
MainTab:Button("Auto Farm", function()
    print("Auto Farm toggled!")
    -- Add your auto farm logic here
    game.StarterGui:SetCore("SendNotification", {
        Title = "Auto Farm";
        Text = "Auto Farm has been activated!";
        Duration = 3;
    })
end)

MainTab:Button("Collect All Items", function()
    print("Collecting all items...")
    -- Add item collection logic here
    for i = 1, 10 do
        print("Collecting item " .. i)
        wait(0.1)
    end
    print("All items collected!")
end)

local autoFarmEnabled = false
MainTab:Toggle("Enable Auto Farm", function(state)
    autoFarmEnabled = state
    print("Auto Farm is now: " .. (state and "ON" or "OFF"))
    
    if state then
        spawn(function()
            while autoFarmEnabled do
                -- Your auto farm loop here
                print("Auto farming...")
                wait(1)
            end
        end)
    end
end)

MainTab:Toggle("Auto Collect Coins", function(state)
    print("Auto Collect Coins: " .. (state and "ON" or "OFF"))
    -- Add coin collection logic here
end)

-- SETTINGS TAB - Configuration options
SettingsTab:Slider("Walk Speed", 16, 100, 16, function(value)
    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
        print("Walk Speed set to: " .. value)
    end
end)

SettingsTab:Slider("Jump Power", 50, 200, 50, function(value)
    if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = value
        print("Jump Power set to: " .. value)
    end
end)

SettingsTab:Slider("Field of View", 70, 120, 70, function(value)
    if game.Workspace.CurrentCamera then
        game.Workspace.CurrentCamera.FieldOfView = value
        print("FOV set to: " .. value)
    end
end)

-- Dropdown for game modes or locations
local locations = {"Spawn", "Forest", "Mountain", "Beach", "Castle", "Dungeon"}
SettingsTab:Dropdown("Teleport Location", locations, function(selected)
    print("Selected location: " .. selected)
    -- Add teleportation logic here
    game.StarterGui:SetCore("SendNotification", {
        Title = "Teleport";
        Text = "Teleported to " .. selected;
        Duration = 2;
    })
end)

-- PLAYER TAB - Player-specific features
PlayerTab:Button("Reset Character", function()
    if game.Players.LocalPlayer.Character then
        game.Players.LocalPlayer.Character:BreakJoints()
    end
end)

PlayerTab:Button("Respawn", function()
    game.Players.LocalPlayer:LoadCharacter()
end)

PlayerTab:Toggle("Infinite Health", function(state)
    print("Infinite Health: " .. (state and "ON" or "OFF"))
    if state then
        spawn(function()
            while state do
                if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                    game.Players.LocalPlayer.Character.Humanoid.Health = game.Players.LocalPlayer.Character.Humanoid.MaxHealth
                end
                wait(0.1)
            end
        end)
    end
end)

PlayerTab:Toggle("No Clip", function(state)
    print("No Clip: " .. (state and "ON" or "OFF"))
    local player = game.Players.LocalPlayer
    
    if state then
        spawn(function()
            while state do
                if player.Character then
                    for _, part in pairs(player.Character:GetChildren()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = false
                        end
                    end
                end
                wait(0.1)
            end
        end)
    else
        if player.Character then
            for _, part in pairs(player.Character:GetChildren()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.CanCollide = true
                end
            end
        end
    end
end)

-- Player name input
PlayerTab:Textbox("Target Player Name", true, function(playerName)
    print("Target player set to: " .. playerName)
    -- Add logic to target specific player
    local targetPlayer = game.Players:FindFirstChild(playerName)
    if targetPlayer then
        print("Found player: " .. targetPlayer.Name)
        game.StarterGui:SetCore("SendNotification", {
            Title = "Target Set";
            Text = "Now targeting: " .. targetPlayer.Name;
            Duration = 3;
        })
    else
        print("Player not found: " .. playerName)
    end
end)

-- MISC TAB - Additional features
MiscTab:Button("Full Bright", function()
    local lighting = game:GetService("Lighting")
    lighting.Brightness = 2
    lighting.ClockTime = 14
    lighting.FogEnd = 100000
    lighting.GlobalShadows = false
    lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
    print("Full Bright enabled!")
end)

MiscTab:Button("Restore Lighting", function()
    local lighting = game:GetService("Lighting")
    lighting.Brightness = 1
    lighting.ClockTime = 12
    lighting.FogEnd = 100000
    lighting.GlobalShadows = true
    lighting.OutdoorAmbient = Color3.fromRGB(70, 70, 70)
    print("Lighting restored!")
end)

-- ESP Toggle
MiscTab:Toggle("ESP Players", function(state)
    print("ESP Players: " .. (state and "ON" or "OFF"))
    -- Add ESP logic here
    if state then
        -- Enable ESP for all players
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer and player.Character then
                -- Add ESP highlighting logic
                print("Adding ESP for: " .. player.Name)
            end
        end
    else
        -- Disable ESP
        print("Disabling ESP for all players")
    end
end)

-- Chat spam textbox
MiscTab:Textbox("Chat Message", false, function(message)
    print("Chat message set to: " .. message)
    -- Add chat spam logic here
    game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
end)

-- Dropdown for different ESP types
local espTypes = {"Players", "Items", "NPCs", "Chests", "All"}
MiscTab:Dropdown("ESP Type", espTypes, function(selected)
    print("ESP Type selected: " .. selected)
    -- Add logic to change ESP type
end)

-- Anti-AFK toggle
MiscTab:Toggle("Anti-AFK", function(state)
    print("Anti-AFK: " .. (state and "ON" or "OFF"))
    if state then
        spawn(function()
            while state do
                game:GetService("VirtualUser"):CaptureController()
                game:GetService("VirtualUser"):ClickButton2(Vector2.new())
                wait(60) -- Click every minute
            end
        end)
    end
end)

-- Server hop button
MiscTab:Button("Server Hop", function()
    print("Server hopping...")
    local TeleportService = game:GetService("TeleportService")
    local Players = game:GetService("Players")
    
    TeleportService:Teleport(game.PlaceId, Players.LocalPlayer)
end)

-- Rejoin button
MiscTab:Button("Rejoin Server", function()
    print("Rejoining server...")
    local TeleportService = game:GetService("TeleportService")
    local Players = game:GetService("Players")
    
    TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, Players.LocalPlayer)
end)

-- Add a slider for transparency
MiscTab:Slider("GUI Transparency", 0, 90, 0, function(value)
    -- Make the GUI semi-transparent
    local transparency = value / 100
    for _, gui in pairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do
        if gui.Name == "VenLib" then
            for _, frame in pairs(gui:GetDescendants()) do
                if frame:IsA("Frame") or frame:IsA("TextLabel") or frame:IsA("TextButton") then
                    if frame.BackgroundTransparency < 1 then
                        frame.BackgroundTransparency = transparency
                    end
                end
            end
        end
    end
    print("GUI Transparency set to: " .. value .. "%")
end)

-- Notification when script loads
wait(1)
game.StarterGui:SetCore("SendNotification", {
    Title = "UI Library Loaded";
    Text = "All features are now available!";
    Duration = 5;
})

print("UI Library example loaded successfully!")
print("Features available:")
print("- Auto Farm with toggle")
print("- Speed/Jump/FOV sliders")
print("- Teleport locations")
print("- Player modifications")
print("- ESP and visual enhancements")
print("- Anti-AFK and server utilities")
