-- UI Library Credits > Rodgie< (^_^)
local TweenService = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")
local Players = game:GetService("Players")

local function ripple(obj)
	spawn(function()
		local Mouse = Players.LocalPlayer:GetMouse()
		local Circle = Instance.new("ImageLabel")
		Circle.Name = "Circle"
		Circle.Parent = obj
		Circle.BackgroundTransparency = 1
		Circle.ZIndex = 10
		Circle.Image = "rbxassetid://266543268"
		Circle.ImageColor3 = Color3.fromRGB(220, 20, 60)
		Circle.ImageTransparency = 0.4
		local NewX, NewY = Mouse.X - Circle.AbsolutePosition.X, Mouse.Y - Circle.AbsolutePosition.Y
		Circle.Position = UDim2.new(0, NewX, 0, NewY)
		local Size = math.max(obj.AbsoluteSize.X, obj.AbsoluteSize.Y) * 1.5
		Circle:TweenSizeAndPosition(UDim2.new(0, Size, 0, Size), UDim2.new(0.5, -Size/2, 0.5, -Size/2), "Out", "Quad", 0.2)
		for i = 1, 20 do
			Circle.ImageTransparency = Circle.ImageTransparency + 0.05
			wait(0.015)
		end
		Circle:Destroy()
	end)
end

local function draggable(obj)
	local dragging, dragInput, dragStart, startPos
	local function update(input)
		local delta = input.Position - dragStart
		local EndPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		TweenService:Create(obj, TweenInfo.new(0.2), {Position = EndPos}):Play()
	end
	obj.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = obj.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then dragging = false end
			end)
		end
	end)
	obj.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	UIS.InputChanged:Connect(function(input)
		if input == dragInput and dragging then update(input) end
	end)
end

local lib = {}

function lib:Window(text)
	local ft, vistab, mini = false, true, false
	
	-- Fix 1: Use ResetOnSpawn = false to prevent GUI from disappearing when character dies
	local VenLib = Instance.new("ScreenGui")
	VenLib.Name = "VenLib"
	VenLib.ResetOnSpawn = false -- This prevents the GUI from disappearing on death
	VenLib.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
	
	local mainframe = Instance.new("Frame")
	mainframe.Name = "mainframe"
	mainframe.Parent = VenLib
	mainframe.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
	mainframe.BorderSizePixel = 0
	mainframe.ClipsDescendants = true
	mainframe.Position = UDim2.new(0.4, 0, 0.37, 0)
	mainframe.Size = UDim2.new(0, 396, 0, 231)
	draggable(mainframe)
	
	local mainholder = Instance.new("Frame")
	mainholder.Name = "mainholder"
	mainholder.Parent = mainframe
	mainholder.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	mainholder.BorderSizePixel = 0
	mainholder.Position = UDim2.new(0, 0, 0, 0)
	mainholder.Size = UDim2.new(0, 396, 0, 27)
	
	local containers = Instance.new("Folder")
	containers.Name = "containers"
	containers.Parent = mainholder
	
	local tabholder = Instance.new("Frame")
	tabholder.Name = "tabholder"
	tabholder.Parent = mainholder
	tabholder.BackgroundTransparency = 1
	tabholder.Position = UDim2.new(0.023, 0, 1.34, 0)
	tabholder.Size = UDim2.new(0, 377, 0, 21)
	
	local tablist = Instance.new("UIListLayout")
	tablist.Parent = tabholder
	tablist.FillDirection = Enum.FillDirection.Horizontal
	
	local top = Instance.new("Frame")
	top.Name = "top"
	top.Parent = mainholder
	top.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	top.BorderSizePixel = 0
	top.Size = UDim2.new(0, 396, 0, 27)
	
	local title = Instance.new("TextLabel")
	title.Name = "title"
	title.Parent = top
	title.BackgroundTransparency = 1
	title.Position = UDim2.new(0.023, 0, 0.036, 0)
	title.Size = UDim2.new(0, 42, 0, 26)
	title.Font = Enum.Font.Gotham
	title.Text = text
	title.TextColor3 = Color3.fromRGB(220, 20, 60)
	title.TextSize = 15
	title.TextXAlignment = Enum.TextXAlignment.Left
	
	local minimize = Instance.new("ImageButton")
	minimize.Name = "minimize"
	minimize.Parent = top
	minimize.BackgroundTransparency = 1
	minimize.Position = UDim2.new(0.932, 0, 0.111, 0)
	minimize.Size = UDim2.new(0, 20, 0, 20)
	minimize.Image = "rbxassetid://3926307971"
	minimize.ImageRectOffset = Vector2.new(884, 284)
	minimize.ImageRectSize = Vector2.new(36, 36)
	minimize.ImageColor3 = Color3.fromRGB(220, 20, 60)
	
	minimize.MouseButton1Click:Connect(function()
		if mini == false then
			mainframe:TweenSize(UDim2.new(0, 396, 0, 27), "Out", "Quad", 0.25)
			mini = true
		else
			mainframe:TweenSize(UDim2.new(0, 396, 0, 231), "In", "Quad", 0.25)
			mini = false
		end
	end)
	
	local tabs = {}
	
	function tabs:Tab(title_text)
		local tabbtn = Instance.new("TextButton")
		tabbtn.Name = "tabbtn"
		tabbtn.Parent = tabholder
		tabbtn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		tabbtn.BorderSizePixel = 0
		tabbtn.BackgroundTransparency = 1
		tabbtn.AutoButtonColor = false
		tabbtn.Font = Enum.Font.Gotham
		tabbtn.Text = title_text
		tabbtn.TextColor3 = Color3.fromRGB(255, 255, 255)
		tabbtn.TextSize = 14
		tabbtn.Size = UDim2.new(0, tabbtn.TextBounds.X + 15, 0, 21)
		
		local container = Instance.new("ScrollingFrame")
		container.Name = "container"
		container.Parent = containers
		container.Active = true
		container.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		container.BorderSizePixel = 0
		container.Position = UDim2.new(0.023, 0, 2.115, 0)
		container.Size = UDim2.new(0, 377, 0, 164)
		container.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		container.CanvasSize = UDim2.new(0, 0, 0, 0)
		container.ScrollBarThickness = 3
		container.ScrollBarImageColor3 = Color3.fromRGB(220, 20, 60)
		container.Visible = vistab
		container.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		
		local containerpadding = Instance.new("UIPadding")
		containerpadding.Parent = container
		containerpadding.PaddingLeft = UDim.new(0, 6)
		containerpadding.PaddingTop = UDim.new(0, 6)
		
		local containerlist = Instance.new("UIListLayout")
		containerlist.Parent = container
		containerlist.Padding = UDim.new(0, 3)
		
		if not ft then
			ft = true
			vistab = false
			tabbtn.BackgroundTransparency = 0
			tabbtn.BackgroundColor3 = Color3.fromRGB(220, 20, 60)
		end
		
		tabbtn.MouseButton1Click:Connect(function()
			for _, v in pairs(containers:GetChildren()) do
				if v.Name == "container" then v.Visible = false end
			end
			for _, v in pairs(tabholder:GetChildren()) do
				if v.ClassName == "TextButton" then
					v.BackgroundTransparency = 1
				end
			end
			tabbtn.BackgroundTransparency = 0
			tabbtn.BackgroundColor3 = Color3.fromRGB(220, 20, 60)
			container.Visible = true
		end)
		
		local tab = {}
		
		function tab:Button(text, callback)
			callback = callback or function() end
			local button = Instance.new("TextButton")
			button.Name = "button"
			button.Parent = container
			button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			button.BorderSizePixel = 0
			button.AutoButtonColor = false
			button.Font = Enum.Font.Gotham
			button.Text = text
			button.TextColor3 = Color3.fromRGB(255, 255, 255)
			button.TextSize = 14
			button.Size = UDim2.new(0, button.TextBounds.X + 15, 0, 27)
			button.ClipsDescendants = true
			
			local me = TweenService:Create(button, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(220, 20, 60)})
			local ml = TweenService:Create(button, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(0, 0, 0)})
			
			button.MouseEnter:Connect(function() me:Play() end)
			button.MouseLeave:Connect(function() ml:Play() end)
			button.MouseButton1Click:Connect(function()
				ripple(button)
				pcall(callback)
			end)
			
			container.CanvasSize = UDim2.new(0, 0, 0, containerlist.AbsoluteContentSize.Y + 10)
		end
		
		function tab:Toggle(text, callback)
			callback = callback or function() end
			local toggled = false
			
			local toggle = Instance.new("TextButton")
			toggle.Name = "toggle"
			toggle.Parent = container
			toggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			toggle.BorderSizePixel = 0
			toggle.ClipsDescendants = true
			toggle.AutoButtonColor = false
			toggle.Text = ""
			toggle.TextSize = 14
			
			local title_label = Instance.new("TextLabel")
			title_label.Name = "title"
			title_label.Parent = toggle
			title_label.BackgroundTransparency = 1
			title_label.Position = UDim2.new(0, 40, 0, 0)
			title_label.Font = Enum.Font.Gotham
			title_label.Text = text
			title_label.Size = UDim2.new(0, 20, 1, 0)
			title_label.TextColor3 = Color3.fromRGB(255, 255, 255)
			title_label.TextSize = 14
			title_label.TextXAlignment = Enum.TextXAlignment.Left
			
			toggle.Size = UDim2.new(0, title_label.TextBounds.X + 50, 0, 30)
			
			local status = Instance.new("Frame")
			status.Name = "status"
			status.Parent = toggle
			status.AnchorPoint = Vector2.new(0, 0.5)
			status.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
			status.BorderSizePixel = 0
			status.Position = UDim2.new(0.005, 8, 0.5, 0)
			status.Size = UDim2.new(0, 20, 0, 20)
			
			local me = TweenService:Create(toggle, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(30, 30, 30)})
			local ml = TweenService:Create(toggle, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(0, 0, 0)})
			local truetoggle = TweenService:Create(status, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(220, 20, 60)})
			local falsetoggle = TweenService:Create(status, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(100, 100, 100)})
			
			toggle.MouseEnter:Connect(function() me:Play() end)
			toggle.MouseLeave:Connect(function() ml:Play() end)
			toggle.MouseButton1Click:Connect(function()
				if not toggled then
					truetoggle:Play()
				else
					falsetoggle:Play()
				end
				toggled = not toggled
				ripple(toggle)
				callback(toggled)
			end)
			
			container.CanvasSize = UDim2.new(0, 0, 0, containerlist.AbsoluteContentSize.Y + 10)
		end
		
		-- Fix 2: Fixed slider functionality
		function tab:Slider(text, min, max, start, callback)
			callback = callback or function() end
			local dragging = false
			
			local slider = Instance.new("Frame")
			slider.Name = "slider"
			slider.Parent = container
			slider.BackgroundTransparency = 1
			
			local title_label = Instance.new("TextLabel")
			title_label.Name = "title"
			title_label.Parent = slider
			title_label.BackgroundTransparency = 1
			title_label.Position = UDim2.new(0, 6, 0, 0)
			title_label.Size = UDim2.new(0, 23, 1, 0)
			title_label.Font = Enum.Font.Gotham
			title_label.Text = text
			title_label.TextColor3 = Color3.fromRGB(255, 255, 255)
			title_label.TextSize = 14
			title_label.TextXAlignment = Enum.TextXAlignment.Left
			
			slider.Size = UDim2.new(0, title_label.TextBounds.X + 185, 0, 30)
			
			local placetoslide = Instance.new("TextButton")
			placetoslide.Name = "placetoslide"
			placetoslide.Parent = slider
			placetoslide.AnchorPoint = Vector2.new(1, 0.5)
			placetoslide.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
			placetoslide.BorderSizePixel = 0
			placetoslide.Position = UDim2.new(1, 0, 0.5, 0)
			placetoslide.Size = UDim2.new(0, 165, 0, 26)
			placetoslide.AutoButtonColor = false
			placetoslide.Text = ""
			
			local slideframe = Instance.new("Frame")
			slideframe.Name = "slideframe"
			slideframe.Parent = placetoslide
			slideframe.BackgroundColor3 = Color3.fromRGB(220, 20, 60)
			slideframe.BorderSizePixel = 0
			slideframe.Size = UDim2.new((start or min) / max, 0, 1, 0)
			
			local value = Instance.new("TextLabel")
			value.Name = "value"
			value.Parent = placetoslide
			value.BackgroundTransparency = 1
			value.Size = UDim2.new(1, 0, 1, 0)
			value.Font = Enum.Font.Gotham
			value.Text = tostring(start or min)
			value.TextColor3 = Color3.fromRGB(255, 255, 255)
			value.TextSize = 14
			
			local function slide(input)
				local pos = math.clamp((input.Position.X - placetoslide.AbsolutePosition.X) / placetoslide.AbsoluteSize.X, 0, 1)
				local newSize = UDim2.new(pos, 0, 1, 0)
				slideframe:TweenSize(newSize, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.1, true)
				local s = math.floor(pos * (max - min) + min)
				value.Text = tostring(s)
				callback(s)
			end
			
			placetoslide.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					slide(input)
					dragging = true
				end
			end)
			
			placetoslide.InputEnded:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = false
				end
			end)
			
			UIS.InputChanged:Connect(function(input)
				if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
					slide(input)
				end
			end)
			
			container.CanvasSize = UDim2.new(0, 0, 0, containerlist.AbsoluteContentSize.Y + 10)
		end
		
		-- Fix 3: Fixed dropdown functionality
		function tab:Dropdown(text, list, callback)
			list = list or {}
			callback = callback or function() end
			local d = false
			
			local dropdown = Instance.new("Frame")
			dropdown.Name = "dropdown"
			dropdown.Parent = container
			dropdown.BackgroundTransparency = 1
			dropdown.Size = UDim2.new(0, 200, 0, 30)
			dropdown.ClipsDescendants = false
			
			local dropdownbtn = Instance.new("TextButton")
			dropdownbtn.Name = "dropdownbtn"
			dropdownbtn.Parent = dropdown
			dropdownbtn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			dropdownbtn.BorderSizePixel = 0
			dropdownbtn.Size = UDim2.new(0, 200, 0, 30)
			dropdownbtn.AutoButtonColor = false
			dropdownbtn.Text = ""
			
			local title_label = Instance.new("TextLabel")
			title_label.Name = "title"
			title_label.Parent = dropdownbtn
			title_label.BackgroundTransparency = 1
			title_label.Position = UDim2.new(0, 8, 0, 0)
			title_label.Size = UDim2.new(0, 23, 1, 0)
			title_label.Font = Enum.Font.Gotham
			title_label.Text = text
			title_label.TextColor3 = Color3.fromRGB(255, 255, 255)
			title_label.TextSize = 14
			title_label.TextXAlignment = Enum.TextXAlignment.Left
			
			local arrow = Instance.new("ImageButton")
			arrow.Name = "arrow"
			arrow.Parent = dropdownbtn
			arrow.BackgroundTransparency = 1
			arrow.Position = UDim2.new(0.87, 0, 0.167, 0)
			arrow.Size = UDim2.new(0, 20, 0, 20)
			arrow.Image = "rbxassetid://3926305904"
			arrow.ImageRectOffset = Vector2.new(564, 284)
			arrow.ImageRectSize = Vector2.new(36, 36)
			arrow.ImageColor3 = Color3.fromRGB(220, 20, 60)
			arrow.Rotation = 90
			
			local dropdowncontainer = Instance.new("ScrollingFrame")
			dropdowncontainer.Name = "dropdowncontainer"
			dropdowncontainer.Parent = dropdown
			dropdowncontainer.Active = true
			dropdowncontainer.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
			dropdowncontainer.BorderSizePixel = 0
			dropdowncontainer.Position = UDim2.new(0, 0, 1, 0)
			dropdowncontainer.Size = UDim2.new(0, 200, 0, 0)
			dropdowncontainer.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
			dropdowncontainer.CanvasSize = UDim2.new(0, 0, 0, 0)
			dropdowncontainer.ScrollBarThickness = 3
			dropdowncontainer.ScrollBarImageColor3 = Color3.fromRGB(220, 20, 60)
			dropdowncontainer.Visible = false
			dropdowncontainer.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
			dropdowncontainer.ZIndex = 10
			
			local dropdownlist = Instance.new("UIListLayout")
			dropdownlist.Parent = dropdowncontainer
			
			local t = TweenService:Create(dropdownbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(15, 15, 15)})
			local nt = TweenService:Create(dropdownbtn, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(0, 0, 0)})
			local closetween = TweenService:Create(arrow, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {Rotation = 90})
			local opentween = TweenService:Create(arrow, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {Rotation = 0})
			
			local function toggleDropdown()
				if not d then
					d = true
					opentween:Play()
					dropdowncontainer.Visible = true
					t:Play()
					dropdowncontainer:TweenSize(UDim2.new(0, 200, 0, math.min(#list * 27, 108)), "In", "Quad", 0.25)
					local newCanvasSize = containerlist.AbsoluteContentSize.Y + math.min(#list * 27, 108) + 10
					container.CanvasSize = UDim2.new(0, 0, 0, newCanvasSize)
				else
					d = false
					closetween:Play()
					nt:Play()
					dropdowncontainer:TweenSize(UDim2.new(0, 200, 0, 0), "Out", "Quad", 0.25)
					container.CanvasSize = UDim2.new(0, 0, 0, containerlist.AbsoluteContentSize.Y + 10)
					spawn(function()
						wait(0.3)
						dropdowncontainer.Visible = false
					end)
				end
			end
			
			dropdownbtn.MouseButton1Click:Connect(toggleDropdown)
			arrow.MouseButton1Click:Connect(toggleDropdown)
			
			for _, v in pairs(list) do
				local option = Instance.new("TextButton")
				option.Name = "option"
				option.Parent = dropdowncontainer
				option.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
				option.BorderSizePixel = 0
				option.Size = UDim2.new(0, 200, 0, 27)
				option.AutoButtonColor = false
				option.Font = Enum.Font.Gotham
				option.TextColor3 = Color3.fromRGB(255, 255, 255)
				option.TextSize = 14
				option.Text = v
				option.ZIndex = 11
				
				local me = TweenService:Create(option, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(220, 20, 60)})
				local ml = TweenService:Create(option, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(15, 15, 15)})
				
				option.MouseEnter:Connect(function() me:Play() end)
				option.MouseLeave:Connect(function() ml:Play() end)
				option.MouseButton1Click:Connect(function()
					title_label.Text = v
					d = false
					closetween:Play()
					nt:Play()
					dropdowncontainer:TweenSize(UDim2.new(0, 200, 0, 0), "Out", "Quad", 0.25)
					container.CanvasSize = UDim2.new(0, 0, 0, containerlist.AbsoluteContentSize.Y + 10)
					spawn(function()
						wait(0.3)
						dropdowncontainer.Visible = false
					end)
					callback(v)
				end)
			end
			
			dropdowncontainer.CanvasSize = UDim2.new(0, 0, 0, dropdownlist.AbsoluteContentSize.Y)
			container.CanvasSize = UDim2.new(0, 0, 0, containerlist.AbsoluteContentSize.Y + 10)
		end
		
		function tab:Textbox(text, disappear, callback)
			callback = callback or function() end
			
			local textbox = Instance.new("Frame")
			textbox.Name = "textbox"
			textbox.Parent = container
			textbox.BackgroundTransparency = 1
			
			local title_label = Instance.new("TextLabel")
			title_label.Name = "title"
			title_label.Parent = textbox
			title_label.BackgroundTransparency = 1
			title_label.Position = UDim2.new(0, 6, 0, 0)
			title_label.Size = UDim2.new(0, 23, 1, 0)
			title_label.Font = Enum.Font.Gotham
			title_label.Text = text
			title_label.TextColor3 = Color3.fromRGB(255, 255, 255)
			title_label.TextSize = 14
			title_label.TextXAlignment = Enum.TextXAlignment.Left
			
			textbox.Size = UDim2.new(0, title_label.TextBounds.X + 185, 0, 30)
			
			local textboxframe = Instance.new("Frame")
			textboxframe.Name = "textboxframe"
			textboxframe.Parent = textbox
			textboxframe.AnchorPoint = Vector2.new(1, 0.5)
			textboxframe.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
			textboxframe.BorderSizePixel = 0
			textboxframe.Position = UDim2.new(1, 0, 0.5, 0)
			textboxframe.Size = UDim2.new(0, 165, 0, 26)
			
			local textboxmain = Instance.new("TextBox")
			textboxmain.Name = "textboxmain"
			textboxmain.Parent = textboxframe
			textboxmain.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
			textboxmain.BorderSizePixel = 0
			textboxmain.Size = UDim2.new(0, 165, 0, 26)
			textboxmain.Font = Enum.Font.Gotham
			textboxmain.Text = ""
			textboxmain.TextColor3 = Color3.fromRGB(255, 255, 255)
			textboxmain.TextSize = 14
			
			textboxmain.FocusLost:Connect(function(enterPressed)
				if enterPressed and #textboxmain.Text > 0 then
					pcall(callback, textboxmain.Text)
					if disappear then
						textboxmain.Text = ""
					end
				end
			end)
			
			container.CanvasSize = UDim2.new(0, 0, 0, containerlist.AbsoluteContentSize.Y + 10)
		end
		
		return tab
	end
	
	return tabs
end

return lib
